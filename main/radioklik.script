local helper = require("main.helper")
local radio_buttons_pos = {}

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	local sizeImg = go.get("/radio_button1#sprite", "size") 
	for i =1, 2, 1 do
		local pos = go.get("radio_button" .. i, "position")
		table.insert(radio_buttons_pos, pos)
	end
	print(radio_buttons_pos[1])
	print(radio_buttons_pos[2])
	self.rectangle = {x=10, y=10, width=100, height=100}
	-- table.insert(radio_buttons, "")//object
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

local function checkAllRadioButtonCollide()
	
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	if action_id == hash("touch") and action.pressed then -- <2>
		local pos = vmath.vector3(action.x, action.y, 0)
		local check = helper.checkCollide(pos, self.rectangle)
		print(check)
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
